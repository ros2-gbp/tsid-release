name: CI - Linux/OSX - Conda

on:
  push:
    branches:
      - devel
      - master
  pull_request:
    branches:
      - devel
      - master

jobs:
  build-with-conda:
    name: '[conda:${{ matrix.os }}:${{ matrix.build_type }}]'
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        activate-environment: tsid

    - name: Install dependencies [Conda]
      shell: bash -l {0}
      run: |
        # Workaround for https://github.com/conda-incubator/setup-miniconda/issues/186
        conda config --remove channels defaults
        # Compilation related dependencies
        conda install cmake compilers make pkg-config doxygen ninja graphviz
        # Main dependencies
        conda install tsid --only-deps
        conda install proxsuite osqp-eigen

    - name: Activate ccache [Conda]
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.os }}-${{ matrix.type }}
        max-size: 1G

    - name: Print environment [Conda]
      shell: bash -l {0}
      run: |
        conda info
        conda list
        env

    - name: Configure [Conda]
      shell: bash -l {0}
      run: |
        echo $(whereis ccache)
        echo $(which ccache)
        git submodule update --init
        mkdir build
        cd build
        cmake .. -GNinja -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_PYTHON_INTERFACE:BOOL=ON -DPYTHON_EXECUTABLE=$(which python3) -DINSTALL_DOCUMENTATION:BOOL=ON -DBUILD_WITH_PROXQP:BOOL=ON -DBUILD_WITH_OSQP:BOOL=ON

    - name: Build [Conda]
      shell: bash -l {0}
      run: |
        cd build
        cmake --build . --config ${{ matrix.build_type }} -v

    - name: Build documentation [Conda]
      shell: bash -l {0}
      run: |
        cd build
        cmake --build . --config ${{ matrix.build_type }} --target doc

    - name: Install [Conda]
      shell: bash -l {0}
      run: |
        cd build
        cmake --install . --config ${{ matrix.build_type }}

    - name: Test [Conda]
      shell: bash -l {0}
      run: |
        find $CONDA_PREFIX -name tsid*
        python -c "import tsid"
        cd build
        ctest --output-on-failure -C ${{ matrix.build_type }}

    - name: Uninstall [Conda]
      shell: bash -l {0}
      run: |
        cd build
        cmake --build . --config ${{ matrix.build_type }} --target uninstall

    - name: Display ccache statistics [Conda]
      shell: bash -l {0}
      run: |
        echo $(ccache -s)
